// src/hooks/useBottomTabBar.tsx
import { useCallback } from 'react';
import { BottomTabItem } from '../components/TabBar';
import useTabBarHandlers from './useTabBarHandlers';
import menuRouterController from '../router/MenuRouterController';

/**
 * Custom hook ƒë·ªÉ qu·∫£n l√Ω BottomTabBar v·ªõi logic c·ª• th·ªÉ
 * @param tabs Danh s√°ch c√°c tab
 * @param initialTab Tab ban ƒë·∫ßu
 * @param onTabChange Callback khi tab thay ƒë·ªïi (optional)
 * @returns Object ch·ª©a props v√† handlers cho BottomTabBar
 */
export function useBottomTabBar(
  tabs: BottomTabItem[],
  initialTab: string = '',
  onTabChange?: (tabKey: string) => void
) {
  const { 
    activeBottomTab, 
    handleBottomTabPress: originalHandleBottomTabPress 
  } = useTabBarHandlers('', initialTab, false);

  // Custom handler ƒë·ªÉ x·ª≠ l√Ω logic b·ªï sung khi tab thay ƒë·ªïi v√† ƒëi·ªÅu h∆∞·ªõng
  const handleBottomTabPress = useCallback((tabKey: string) => {
    console.log(`üî• Bottom tab pressed: ${tabKey}`);
    
    // C·∫≠p nh·∫≠t state tab
    originalHandleBottomTabPress(tabKey);
    
    // ƒêi·ªÅu h∆∞·ªõng th√¥ng qua router
    const navigationSuccess = menuRouterController.handleBottomTabNavigation(tabKey);
    

    // G·ªçi callback n·∫øu c√≥
    if (onTabChange) {
      onTabChange(tabKey);
    }
  }, [originalHandleBottomTabPress, onTabChange]);

  // Tr·∫£ v·ªÅ t·∫•t c·∫£ props c·∫ßn thi·∫øt cho BottomTabBar
  return {
    // State
    activeBottomTab,
    
    // Props cho BottomTabBar component
    bottomTabBarProps: {
      tabs,
      activeTab: activeBottomTab,
      onTabPress: handleBottomTabPress
    },
    
    // Individual handlers n·∫øu c·∫ßn s·ª≠ d·ª•ng ri√™ng
    handleBottomTabPress
  };
}

export default useBottomTabBar;